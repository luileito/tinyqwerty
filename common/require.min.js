(function(){function getErrorObject(){try{throw Error("")}catch(err){return err}}function getCallerFilepath(){var err=getErrorObject();var normStack=err.stack.split("at Error (<anonymous>)").join("\n");var caller=normStack.split("\n")[3];var index=caller.indexOf("http:");var clean=caller.slice(index,caller.length);var parts=clean.split("/");delete parts[parts.length-1];return parts.join("/")}var base=getCallerFilepath();if(window.require!==undefined){throw"RequireException: 'require' already defined in global scope"}window.require=function(module,callback,refusePadding){var url=window.require.resolve(module);if(require.cache[url]){if(callback){setTimeout(function(){callback(require.cache[url])},0)}return require.cache[url]}var exports;var request=new XMLHttpRequest();request.onreadystatechange=function(){if(this.readyState!=4){return}if(this.status!=200){throw"Require() exception: GET "+url+" "+this.status+" ("+this.statusText+")"}if(window.require.cache[url]){exports=window.require.cache[url]}else{if(this.getResponseHeader("content-type").indexOf("application/json")!=-1){exports=JSON.parse(this.responseText)}else{var str;if(!refusePadding){var source=this.responseText.match(/^\s*(?:(['"]use strict['"])(?:;\r?\n?|\r?\n))?\s*((?:.*\r?\n?)*)/);str="/* Require (with padding) */(function(){"+source[1]+";var undefined,exports,module={exports:exports};"+source[2]+"\n\nreturn module.exports;})();"}else{str="/* Require (without padding) */var exports;"+this.responseText+"\n\ntrue;"}str+="\n\n//@ sourceURL="+url;try{var errmsg="Module "+module+' with url "'+url+'" could not be included.';var line=(new Error).lineNumber+1;exports=eval.apply(window,[str])}catch(e){line=e.lineNumber-line-1;console.warn(errmsg);console.error("In line",line,e)}}}window.require.cache[url]=exports;if(callback){callback(window.require.cache[url])}};request.open("GET",url,!!callback);request.send();return exports};window.include=function(module,callback){window.require(module,callback,true)};window.require.resolve=function(module){var file=module+".js";if(!module.match(/^\.{0,2}\//)){file=base+file}return file};window.require.cache={}})();